openapi: "3.0.3"

info:
  title: SaaS server Open REST API Specification
  description: SaaS server Open REST API specification
  version: 1.0.0

servers:
  - url: /

paths:
  /status:
    get:
      tags:
        - private
      summary: Kubernetes readiness and liveness probe endpoint
      responses:
        '200':
          description: successful operation

  /api-docs:
    get:
      tags:
        - public
      summary: List of APIs provided by the service
      responses:
        '200':
          description: OK

  /climon:
    post:
      tags:
        - climon
      summary: deploy the application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClimonPostRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

    put:
      tags:
        - climon
      summary: deploy the application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClimonPostRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

    delete:
      tags:
        - climon
      summary: deploy the application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClimonDeleteRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /deployer:
    post:
      tags:
        - deployer
      summary: deploy the application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployerPostRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

    put:
      tags:
        - deployer
      summary: deploy the application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployerPostRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

    delete:
      tags:
        - deployer
      summary: deploy the application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployerDeleteRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /configator/repository:
    post:
      tags:
        - repository
      summary: deploy the application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryPostRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

    put:
      tags:
        - repository
      summary: deploy the application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryPostRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

    delete:
      tags:
        - repository
      summary: deploy the application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryDeleteRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /configator/project:
    post:
      tags:
        - project
      summary: deploy the application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPostRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

    put:
      tags:
        - project
      summary: deploy the application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPostRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

    delete:
      tags:
        - project
      summary: deploy the application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectDeleteRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /configator/cluster:
    post:
      tags:
        - cluster
      summary: deploy the application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

    delete:
      tags:
        - cluster
      summary: Delete the application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /register/agent:
    post:
      tags:
        - agent-registration
      summary: Register agent
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AgentRequest'
      responses:
        '200':
          description: OK
    put:
      tags:
        - agent-registration
      summary: Register agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentRequest'
      responses:
        '200':
          description: OK
    get:
      tags:
        - agent-registration
      summary: Register agent
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgentResponse'

components:
  schemas:
    AgentRequest:
      title: Agent information
      type: object
      properties:
        ca_crt:
          type: array
          items:
            type: string
            format: binary
        client_crt:
          type: array
          items:
            type: string
            format: binary
        client_key:
          type: array
          items:
            type: string
            format: binary
      required:
        - ca_crt
        - client_crt
        - client_key

    AgentResponse:
      title: Agent response
      type: object
      properties:
        customer_id:
          type: string
        endpoint:
          type: string
      required:
        - customer_id
        - endpoint

    Response:
      type: object
      description: Configuration request response
      properties:
        status:
          type: string
        message:
          type: string
      required:
        - status
        - message

    ClimonPostRequest:
      title: Deploy operation request payload
      type: object
      properties:
        plugin_name:
          type: string
          description: Plugin name
        repo_name:
          type: string
          description: Repository name
        repo_url:
          type: string
          description: Repository URL
        chart_name:
          type: string
          description: Chart name in Repository
        namespace:
          type: string
          description: Namespace chart to be installed
        release_name:
          type: string
          description: Release name to be used for install
        timeout:
          type: integer
          description: Timeout for the application installation
        version:
          type: string
          description: Version of the chart
        cluster_name:
          type: string
          description: Cluster in which to be installed, default in-build cluster
      required:
        - plugin_name
        - repo_name
        - repo_url
        - chart_name
        - namespace
        - release_name
        - timeout

    ClimonDeleteRequest:
      title: Deploy operation request payload
      type: object
      properties:
        customer_id:
          type: string
        plugin_name:
          type: string
          description: Plugin name
        namespace:
          type: string
          description: Namespace chart to be installed
        release_name:
          type: string
          description: Release name to be used for install
        timeout:
          type: integer
          description: Timeout for the application installation
        cluster_name:
          type: string
          description: Cluster in which to be deleted, default in-build cluster
      required:
        - customer_id
        - plugin_name
        - namespace
        - release_name
        - timeout
    DeployerPostRequest:
      title: Deploy operation request payload
      type: object
      properties:
        plugin_name:
          type: string
          description: Plugin name
        repo_name:
          type: string
          description: Repository name
        repo_url:
          type: string
          description: Repository URL
        chart_name:
          type: string
          description: Chart name in Repository
        namespace:
          type: string
          description: Namespace chart to be installed
        release_name:
          type: string
          description: Release name to be used for install
        timeout:
          type: integer
          description: Timeout for the application installation
        version:
          type: string
          description: Version of the chart
        cluster_name:
          type: string
          description: Cluster in which to be installed, default in-build cluster
      required:
        - plugin_name
        - repo_name
        - repo_url
        - chart_name
        - namespace
        - release_name
        - timeout

    DeployerDeleteRequest:
      title: Deploy operation request payload
      type: object
      properties:
        plugin_name:
          type: string
          description: Plugin name
        namespace:
          type: string
          description: Namespace chart to be installed
        release_name:
          type: string
          description: Release name to be used for install
        timeout:
          type: integer
          description: Timeout for the application installation
        cluster_name:
          type: string
          description: Cluster in which to be deleted, default in-build cluster
      required:
        - plugin_name
        - namespace
        - release_name
        - timeout

    ClusterRequest:
      title: Configure payload
      type: object
      properties:
        customer_id:
          type: string
        plugin_name:
          type: string
        cluster_name:
          type: string
      required:
        - customer_id
        - plugin_name
        - cluster_name

    RepositoryPostRequest:
      title: Configure payload
      type: object
      properties:
        plugin_name:
          type: string
          description: Plugin name
        repo_name:
          type: string
          description: Repository to added to plugin
        repo_url:
          type: string
          description: Repository URL
      required:
        - plugin_name
        - repo_name
        - repo_url

    RepositoryDeleteRequest:
      title: Configure payload
      type: object
      properties:
        plugin_name:
          type: string
          description: Plugin name
        repo_name:
          type: string
          description: Repository to added to plugin
      required:
        - plugin_name
        - repo_name

    ProjectPostRequest:
      title: Configure payload
      type: object
      properties:
        plugin_name:
          type: string
          description: Plugin name
        project_name:
          type: string
          description: Project name to be created in plugin
        # Project parameters to be added
      required:
        - plugin_name
        - project_name

    ProjectDeleteRequest:
      title: Configure payload
      type: object
      properties:
        plugin_name:
          type: string
          description: Plugin name
        project_name:
          type: string
          description: Project name to be created in plugin
        # Project parameters to be added
      required:
        - plugin_name
        - project_name
