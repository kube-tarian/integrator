# Default values for kad.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  pullPolicy: Always
  agent:
    repository: ghcr.io/kube-tarian/kad/agent
    tag: latest
  deployment_worker:
    repository: ghcr.io/kube-tarian/kad/deployment-worker
    tag: latest
  config_worker:
    repository: ghcr.io/kube-tarian/kad/config-worker
    tag: latest

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

env:
  logLevel: info

service:
  type: ClusterIP
  port: 8080
  createPr: "true"

vault:
  address: http://vault:8200
  role: vault-role-capten-agent
  policyNames: "vault-policy-certs-admin,vault-policy-service-cred-admin,vault-policy-generic-cred-admin"

cassandra:
  addresses: capten-cass-capten-cass-service:9042
  userName: kadagent
  entityName: cassandra
  keyspace: capten
  secretName: capten-cass-superuser

ingressroute:
  enabled: true
  mtls:
    enabled: true
  host: "captenagent"

cert:
  secretName: "kad-agent-cert"

extraEnv:
  - name: AUTH_ENABLED
    value: false

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

configWorkerGitCloneDir: "/gitCloneDir"
configWorker:
  pluginConfigDir: "/configs"
  tektonPluginConfigFile: "tekton_plugin_config.json"
  crossplanePluginConfigFile: "crossplane_plugin_config.json"
# TODO: attributes to be added
temporal:
  external: true
  temporalServiceURL: temporal-frontend

argocd:
  serviceURL: argocd-server.default.svc.cluster.local
