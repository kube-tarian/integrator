
syntax = "proto3";

option go_package = "/serverpb";

package serverpb;

service Server {
  rpc NewClusterRegistration (NewClusterRegistrationRequest) returns (NewClusterRegistrationResponse) {}  
  rpc UpdateClusterRegistration (UpdateClusterRegistrationRequest) returns (UpdateClusterRegistrationResponse) {} 
  rpc DeleteClusterRegistration (DeleteClusterRegistrationRequest) returns (DeleteClusterRegistrationResponse) {}
  
  rpc GetClusters (GetClustersRequest) returns (GetClustersResponse) {}
  rpc GetCluster (GetClusterRequest) returns (GetClusterResponse) {}  
  rpc GetClusterApps (GetClusterAppsRequest) returns (GetClusterAppsResponse) {}
  rpc GetClusterAppLaunchConfigs (GetClusterAppLaunchConfigsRequest) returns (GetClusterAppLaunchConfigsResponse) {}
  rpc GetClusterApp (GetClusterAppRequest) returns (GetClusterAppResponse) {}

  rpc AddStoreApp (AddStoreAppRequest) returns (AddStoreAppResponse) {}
  rpc UpdateStoreApp (UpdateStoreAppRequest) returns (UpdateStoreAppRsponse){}
  rpc DeleteStoreApp (DeleteStoreAppRequest) returns (DeleteStoreAppResponse){}
  rpc GetStoreApp (GetStoreAppRequest) returns (GetStoreAppResponse) {}
  rpc GetStoreApps (GetStoreAppsRequest) returns (GetStoreAppsResponse) {}
  rpc GetStoreAppValues(GetStoreAppValuesRequest) returns (GetStoreAppValuesResponse) {}
  rpc DeployStoreApp(DeployStoreAppRequest) returns (DeployStoreAppResponse) {}
}

enum StatusCode {
  OK = 0;
  INTERNRAL_ERROR = 1;
  INVALID_ARGUMENT = 2;
  NOT_FOUND = 3;
}

message NewClusterRegistrationRequest {
  string clusterName = 1;
  string agentEndpoint = 2;
  string clientKeyData = 3;
  string clientCertData = 4;
  string clientCAChainData = 5;
}

message NewClusterRegistrationResponse {
  StatusCode status = 1;
  string statusMessage = 2;
  string clusterID = 3;
}

message UpdateClusterRegistrationRequest {
  string clusterID = 1;
  string clusterName = 2;
  string agentEndpoint = 3;
  string clientKeyData = 4;
  string clientCertData = 5;
  string clientCAChainData = 6;
}

message UpdateClusterRegistrationResponse {
  StatusCode status = 1;
  string statusMessage = 2;
}

message DeleteClusterRegistrationRequest {
  string clusterID = 1;  
}

message DeleteClusterRegistrationResponse {
  StatusCode status = 1;
  string statusMessage = 2;
}

message GetClustersRequest {
}

message GetClustersResponse {
  StatusCode status = 1;
  string statusMessage = 2;
  repeated ClusterInfo data = 3; 
}

message GetClusterRequest {
  string clusterID = 1;
}

message GetClusterResponse {
  StatusCode status = 1;
  string statusMessage = 2;
  ClusterInfo data = 3; 
}


message GetClusterAppsRequest {
  string clusterID = 1; 
}

message GetClusterAppsResponse {
  StatusCode status = 1;
  string statusMessage = 2;
  repeated ClusterAppConfig appConfigs = 3;
}

message GetClusterAppRequest {
  string clusterID = 1;
  string appReleaseName = 2;
}

message GetClusterAppResponse {
  StatusCode status = 1;
  string statusMessage = 2;
  ClusterAppConfig appConfig = 3; 
}

message GetClusterAppLaunchConfigsRequest {
  string clusterID = 1;
}

message GetClusterAppLaunchConfigsResponse {
  StatusCode status = 1;
  string statusMessage = 2;
  repeated AppLaunchConfig appLaunchConfig = 3;
}

message ClusterInfo {
  string clusterID = 1;
  string clusterName = 2;
  string agentEndpoint = 3;
  repeated ClusterAttribute attributes = 4;
  repeated AppLaunchConfig appLaunchConfigs = 5;
}

message AppLaunchConfig {
  string releaseName = 1;
  string category = 2;
  string launchUIDescription = 3;
  bytes icon = 4;
  string launchURL = 5;
}

message ClusterAttribute {
  string key = 1;
  string value = 2;  
}

message ClusterAppConfig {
  string releaseName = 1;
  string appName = 2;
  string version = 3;
  string category = 4;
  string description = 5;
  string chartName = 6;
  string repoName = 7;
  string repoURL = 8;
  string namespace = 9;
  bool createNamespace = 10;
  bool privilegedNamespace = 11;
  bytes icon = 12;
  string launchURL = 13;
  string launchUIDescription = 14;
  string installStatus = 15;
  string runtimeStatus = 16;
  bool defualtApp = 17;
}

message AddStoreAppRequest {
  StoreAppConfig appConfig = 1;
  StoreAppAllValues appValues = 2;
}

message AddStoreAppResponse {
  StatusCode status = 1;
  string statusMessage = 2;
}

message UpdateStoreAppRequest {
  StoreAppConfig appConfig = 1;
  StoreAppAllValues appValues = 2;
}

message UpdateStoreAppRsponse {
  StatusCode status = 1;
  string statusMessage = 2;
}

message DeleteStoreAppRequest {
  string appName = 1;
  string version = 2;
}

message DeleteStoreAppResponse {
  StatusCode status = 1;
  string statusMessage = 2;
}

message GetStoreAppRequest {
  string appName = 1;
  string version = 2;
}

message GetStoreAppResponse {
  StatusCode status = 1;
  string statusMessage = 2;
  StoreAppConfig appConfig = 3;
}

message GetStoreAppsRequest {
}

message GetStoreAppsResponse {
  StatusCode status = 1;
  string statusMessage = 2;
  repeated StoreAppsData data = 3;
}

message StoreAppsData {
  StoreAppConfig appConfigs = 1;
  bytes overrideValues = 2;
}

message GetStoreAppValuesRequest {
  string appName = 1;
  string version = 2;
}

message GetStoreAppValuesResponse {
  StatusCode status = 1;
  string statusMessage = 2;
  StoreAppConfig appConfig = 3;
  bytes overrideValues = 4;
}

message DeployStoreAppRequest {
  string appName = 1;
  string version = 2;
  bytes overrideValues = 3;
}

message DeployStoreAppResponse{
  StatusCode status = 1;
  string statusMessage = 2;
}

message StoreAppConfig {
  string releaseName = 1;
  string appName = 2;
  string version = 3;
  string category = 4;
  string description = 5;
  string chartName = 6;
  string repoName = 7;
  string repoURL = 8;
  string namespace = 9;
  bool createNamespace = 10;
  bool privilegedNamespace = 11;
  bytes icon = 12;
  string launchURL = 13;
  string launchUIDescription = 14;
  bool defualtApp = 15;
}

message StoreAppAllValues {
  bytes overrideValues = 1;
  bytes launchUIValues = 2;
  bytes templateValues = 3;
}
