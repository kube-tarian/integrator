
syntax = "proto3";

option go_package = "/agentpb";

package agentpb;

// The greeting service definition.
service Agent {
  rpc Ping (PingRequest) returns (PingResponse) {}
  rpc StoreCredential (StoreCredentialRequest) returns (StoreCredentialResponse) {}
  rpc ConfigureVaultSecret (ConfigureVaultSecretRequest) returns (ConfigureVaultSecretResponse) {}
  rpc CreateVaultRole (CreateVaultRoleRequest) returns (CreateVaultRoleResponse) {}
  rpc UpdateVaultRole (UpdateVaultRoleRequest) returns (UpdateVaultRoleResponse) {}
  rpc DeleteVaultRole (DeleteVaultRoleRequest) returns (DeleteVaultRoleResponse) {}

  rpc SyncApp(SyncAppRequest) returns (SyncAppResponse) {}
  rpc GetClusterApps (GetClusterAppsRequest) returns (GetClusterAppsResponse) {}
  rpc GetClusterAppLaunches (GetClusterAppLaunchesRequest) returns (GetClusterAppLaunchesResponse) {}
  rpc ConfigureAppSSO(ConfigureAppSSORequest) returns (ConfigureAppSSOResponse) {}

  rpc GetClusterAppConfig (GetClusterAppConfigRequest) returns (GetClusterAppConfigResponse) {}
  rpc GetClusterAppValues (GetClusterAppValuesRequest) returns (GetClusterAppValuesResponse) {}

  rpc GetClusterGlobalValues (GetClusterGlobalValuesRequest) returns (GetClusterGlobalValuesResponse) {}

  rpc InstallApp (InstallAppRequest) returns (InstallAppResponse) {}
  rpc UnInstallApp (UnInstallAppRequest) returns (UnInstallAppResponse) {}

  rpc UpgradeApp (UpgradeAppRequest) returns (UpgradeAppResponse) {}
  rpc UpdateAppValues (UpdateAppValuesRequest) returns (UpdateAppValuesResponse) {}
}

enum StatusCode {
  OK = 0;
  INTERNRAL_ERROR = 1;
  INVALID_ARGUMENT = 2;
  NOT_FOUND = 3;
}

message PingRequest {  
}

message PingResponse {
  StatusCode status = 1;
}

message StoreCredentialRequest {
  string credentialType = 1;
  string credEntityName = 2;
  string credIdentifier = 3;
  map<string, string>  credential = 4;  
}

message StoreCredentialResponse {
  StatusCode status = 1;
  string statusMessage = 2;
}

message ClusterRequest {
  string plugin_name = 1;
  string cluster_name = 2;
}

message RepositoryAddRequest {
  string plugin_name = 1;
  string repo_name = 2;
  string repo_url = 3;
}

message RepositoryDeleteRequest {
  string plugin_name = 1;
  string repo_name = 2;
}

message ProjectAddRequest {
  string plugin_name = 1;
  string project_name = 2;
}

message ProjectDeleteRequest {
  string plugin_name = 1;
  string project_name = 2;
}

message JobResponse {
  string id = 1;
  string runID = 2;
  string workflowName = 3;
}

message SyncAppRequest {
  SyncAppData data = 1;
}

message SyncAppResponse {
  StatusCode status = 1;
  string statusMessage = 2;
}

message GetClusterAppsRequest {}

message GetClusterAppsResponse {
  StatusCode status = 1;
  string statusMessage = 2;
  repeated AppData appData = 3;
}

message GetClusterAppLaunchesRequest {}

message GetClusterAppLaunchesResponse {
  StatusCode status = 1;
  string statusMessage = 2;
  repeated AppLaunchConfig launchConfigList = 3;
}

message ConfigureAppSSORequest {
  string releaseName = 1;  
  string clientId = 2;
  string clientSecret = 3;
  string oAuthBaseURL = 4;
}

message ConfigureAppSSOResponse {
  StatusCode status = 1;
  string statusMessage = 2;  
}

message GetClusterAppConfigRequest {
  string releaseName = 1;
}

message GetClusterAppConfigResponse {
  StatusCode status = 1;
  string statusMessage = 2;
  AppConfig appConfig = 3;
}

message GetClusterAppValuesRequest {
  string releaseName = 1;
}

message GetClusterAppValuesResponse {
  StatusCode status = 1;
  string statusMessage = 2;
  AppValues values = 3;
}

message GetClusterGlobalValuesRequest {  
}

message GetClusterGlobalValuesResponse {  
  StatusCode status = 1;
  string statusMessage = 2;
  bytes globalValues = 3;
}

message InstallAppRequest {
  AppConfig appConfig =1;
  AppValues appValues = 2;
}

message InstallAppResponse {
  StatusCode status = 1;
  string statusMessage = 2;
}

message UnInstallAppRequest {
  string releaseName = 2;
}

message UnInstallAppResponse {
  StatusCode status = 1;
  string statusMessage = 2;
}

message SyncAppData {
  AppConfig config = 1;
  AppValues values = 2;
}

message AppData {
  AppConfig config = 1;
  AppStatus status = 2;
}

message AppStatus {
  string runtimeStatus = 1;
}

message AppConfig {
  string releaseName = 1;
  string appName = 2;
  string version = 3;
  string category = 4;
  string description = 5;
  string chartName = 6;
  string repoName = 7;
  string repoURL = 8;
  string namespace = 9;
  bool createNamespace = 10;
  bool privilegedNamespace = 11;
  bytes icon = 12;
  string launchURL = 13;
  string launchUIDescription = 14;
  string installStatus = 15;
  string runtimeStatus = 16;
  bool defualtApp = 17;
  string lastUpdateTime = 18;
  string pluginName = 19;
  string pluginDescription = 20;
  string apiEndpoint = 21;
}

message AppValues {
  bytes overrideValues = 1;
  bytes launchUIValues = 2;
  bytes templateValues = 3;
}

message AppLaunchConfig {
  string releaseName = 1;
  string category = 2;
  string description = 3;
  bytes icon = 4;
  string launchURL = 5;
  string launchUIDescription = 6;
}

message UpgradeAppRequest {
  AppConfig appConfig =1;
  AppValues appValues = 2;
}

message UpgradeAppResponse {
  StatusCode status = 1;
  string statusMessage = 2;
}

message UpdateAppValuesRequest {
  string releaseName = 1;
  bytes overrideValues = 3;
}

message UpdateAppValuesResponse {
  StatusCode status = 1;
  string statusMessage = 2;
}


enum SecretAccess {
  READ = 0;
  WRITE = 1;  
}

message SecretPathRef {
  string SecretPath = 1;
  string SecretKey = 2;
}

message ConfigureVaultSecretRequest {  
  string secretName = 1;
  string namespace = 2;
  repeated SecretPathRef SecretPathData = 3;
}

message SecretPolicy { 
  string secretPath = 1;
  SecretAccess access = 2;
}

message ConfigureVaultSecretResponse {
  StatusCode status = 1;
  string statusMessage = 2;
}

message CreateVaultRoleRequest { 
  string managedClusterName = 1;
  string roleName = 2;
  repeated SecretPolicy secretPolicy = 3;
  repeated string namespaces = 4;
  repeated string serviceAccounts = 5;  
}

message CreateVaultRoleResponse { 
  StatusCode status = 1;
  string statusMessage = 2;
}

message UpdateVaultRoleRequest { 
  string managedClusterName = 1;
  string roleName = 2;
  repeated SecretPolicy secretPolicy = 3;
  repeated string namespaces = 4;
  repeated string serviceAccounts = 5;
}

message UpdateVaultRoleResponse { 
  StatusCode status = 1;
  string statusMessage = 2;
}

message DeleteVaultRoleRequest { 
  string roleName = 1;
}

message DeleteVaultRoleResponse { 
  StatusCode status = 1;
  string statusMessage = 2;
}